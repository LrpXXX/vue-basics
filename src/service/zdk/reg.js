// 通用本地存储公共类 基于ES6
// reg 正则表达式验证方法类
// 取名规则  汉字：C（CN） ，字母：L（Letter），数字：N（Number）
// 用法
export default {
  // 用户账号验证
  userName: /^[a-z0-9_]{4,16}$/,
  // 1 常用组合
  // 用户名正则，4到16位（字母，数字，下划线，减号）
  uname1: /^[a-zA-Z0-9_-]{4,16}$/,
  // 用户名正则，1到16位（汉字，字母，数字，下划线，减号）
  uname2: /^[a-zA-Z0-9_-\u4e00-\u9fa5()]{1,16}$/,

  // 包含中文正则
  CN: /[\u4E00-\u9FA5]/,
  // 汉字、字母、数字
  CLN: /^[a-zA-Z0-9\u4e00-\u9fa5()]+$/,
  // 字母、数字
  LN: /^[a-zA-Z0-9]+$/,
  // Email正则
  eMail: /^([A-Za-z0-9_\-\.])+\@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/,
  // 手机号码正则  // console.log(mPattern.test("15507621888"));
  mobile: /^1[34578]\d{9}$/,
  // 身份证号（18位）正则   // console.log(cP.test("11010519880605371X"));
  card: /^[1-9]\d{5}(18|19|([23]\d))\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\d{3}[0-9Xx]$/,

  // 日期正则
  // 日期正则，简单判定,未做月份及日期的判定 eg:console.log(dP1.test("2017-05-11"));
  date1: /^\d{4}(\-)\d{1,2}\1\d{1,2}$/,
  // 日期正则，复杂判定    // true console.log(dP2.test("2017-02-11"));  // false  console.log(dP2.test("2017-02-29"));
  date2: /^(?:(?!0000)[0-9]{4}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-8])|(?:0[13-9]|1[0-2])-(?:29|30)|(?:0[13578]|1[02])-31)|(?:[0-9]{2}(?:0[48]|[2468][048]|[13579][26])|(?:0[48]|[2468][048]|[13579][26])00)-02-29)$/,

  // URL正则     // console.log(urlP.test("http://caibaojian.com"));
  url: /^((https?|ftp|file):\/\/)?([\da-z\.-]+)\.([a-z\.]{2,6})([\/\w \.-]*)*\/?$/,

  // 2 密码强度正则
  // 密码强度正则，6位~20位，包括至少1个大写字母，1个小写字母
  pwd1: /^.*(?=.{6,20})(?=.*[A-Z])(?=.*[a-z]).*$/,
  // 密码强度正则，最少8位~20位，包括至少1个大写字母，1个小写字母，1个数字
  pwd2: /^.*(?=.{8,20})(?=.*\d)(?=.*[A-Z])(?=.*[a-z]).*$/,
  // 密码强度正则，最少8位~20位，包括至少1个大写字母，1个小写字母，1个数字，1个特殊字符   // console.log(""+pPattern.test("caibaojian#"));
  pwd3: /^.*(?=.{8,20})(?=.*\d)(?=.*[A-Z])(?=.*[a-z])(?=.*[!@#$%^&*? ]).*$/,

  // 3 整数正则
  pos: /^\d+$/, // 正整数正则 true  console.log(posPattern.test("42"));
  neg: /^-\d+$/, // 负整数正则
  int: /^-?\d+$/, // 整数正则

  // 4 数字正则  可以是整数也可以是浮点数
  posFloat: /^\d*\.?\d+$/, // 正数正则
  negFloat: /^-\d*\.?\d+$/, // 负数正则
  numFloat: /^-?\d*\.?\d+$/, // 数字正则

  // 5  IPv4地址正则
  // ipv4地址正则     //   console.log(ipP.test("115.28.47.26"));
  ip: /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/,

  // 6 十六进制颜色正则
  // RGB Hex颜色正则     // console.log(cPattern.test("#b8b8b8"));
  rgb: /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/,

  // 7 QQ号码正则
  // QQ号正则，5至11位   // console.log(qqPattern.test("65974040"));
  QQ: /^[1-9][0-9]{4,10}$/,

  // 8 微信号正则
  // 微信号正则，6至20位，以字母开头，字母，数字，减号，下划线   // console.log(wxPattern.test("caibaojian_com"));
  WX: /^[a-zA-Z]([-_a-zA-Z0-9]{5,19})+$/,

  // 9 车牌号正则
  // 车牌号正则    // console.log(cPattern.test("粤B39006"));
  Car: /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-Z0-9]{4}[A-Z0-9挂学警港澳]{1}$/

}
